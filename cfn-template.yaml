AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation Template for Roman Numerals Converter Application. 
    This template creates Python Flask Web Application on Amazon Linux 2023  
    EC2 Instance with custom security group allowing http connections on port 80, 8080 and SSH connection on port 22. 
    Roman Numerals Converter Application is downloaded from Github repository, then installed on Flask."

Parameters:
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64'
  InstanceType:
    Type: 'String'
    Default: 't2.micro'
  keyPair:
    Description: Choose your keypair
    Type: AWS::EC2::KeyPair::KeyName
    Default: first_key

Resources:
  myWebServer:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceType
      KeyName: !Ref keyPair
      UserData:
        Fn::Base64: |
            #! /bin/bash
            dnf update -y
            dnf install git -y
            dnf install python3 -y
            dnf install python3-pip -y
            pip3 install flask
            cd /home/ec2-user
            git clone https://github.com/tahabozoyuk/Roman-numerals-EC2-CFN_CLI.git
            cd Roman-numerals-EC2-CFN_CLI
            python3 roman-numerals-converter-app.py

  WebServerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Security group for the Web Server and Terminal"
      GroupName: taha-roman-number-converter
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "tcp"
          FromPort: 8080
          ToPort: 8080    
      Tags:
        - Key: "Name"
          Value: "Web Server of ${AWS::StackName}"
Outputs:
  webSiteURL:
    Description: URL of website
    Value: !Sub
      - http://${PublicDNS}
      - PublicDNS: !GetAtt myWebServer.PublicDnsName
  









